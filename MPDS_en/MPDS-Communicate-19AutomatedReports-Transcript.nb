(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     20980,        445]
NotebookOptionsPosition[     11731,        266]
NotebookOutlinePosition[     18680,        414]
CellTagsIndexPosition[     18609,        409]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Get the Message Across", "Section",
 Evaluatable->False,
 CellChangeTimes->{{3.7550187405549192`*^9, 3.755018745149918*^9}, {
   3.7591638606642447`*^9, 3.759163886002613*^9}, 3.759164210011063*^9, {
   3.759164301100876*^9, 3.7591643044495583`*^9}, {3.759164377421114*^9, 
   3.759164377845544*^9}, {3.759167251656486*^9, 3.759167252750435*^9}, 
   3.7594988327022038`*^9, {3.7600982572670107`*^9, 3.760098267473927*^9}, {
   3.762883551242763*^9, 3.762883554328678*^9}, {3.764006742662427*^9, 
   3.764006750852619*^9}, {3.766145377718863*^9, 3.766145382356106*^9}, 
   3.76700556141499*^9, 3.767114282104458*^9},
 CounterAssignments->{{"Section", 4}, {"Subsection", 0}, {
   "Subsubsection", 0}, {
   "Exercise", 0}},ExpressionUUID->"452656e9-c10f-4a30-b8e5-62b3374d1e27"],

Cell[CellGroupData[{

Cell["Automated Reports", "Subsection",
 CellChangeTimes->{{3.76107050681248*^9, 3.761070522683797*^9}, {
   3.76107058461234*^9, 3.7610705946430264`*^9}, {3.7628835574485292`*^9, 
   3.7628835673684397`*^9}, {3.762883693478266*^9, 3.76288369844493*^9}, {
   3.764006753900371*^9, 3.764006757316087*^9}, {3.766148341983994*^9, 
   3.766148381653051*^9}, {3.766516930027422*^9, 3.7665169538264923`*^9}, {
   3.7669220030863867`*^9, 3.766922005094008*^9}, {3.7669359684938107`*^9, 
   3.766935971092455*^9}, 
   3.76694648196422*^9},ExpressionUUID->"a9dbdc2d-8f35-4b83-86be-\
fc574685c07f"],

Cell["[00:00]", "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.7],
 CellChangeTimes->{{3.7665075681432133`*^9, 3.766507568862628*^9}, {
   3.7665077580949802`*^9, 3.7665077607112217`*^9}, 3.766508272253685*^9, {
   3.766921536627124*^9, 3.7669215403148813`*^9}},
 CellTags->"Timecode",ExpressionUUID->"a6d4b324-6e8e-4ff5-831c-3b381b156d97"],

Cell["\<\
Multiparadigm Data Science with the Wolfram Language, Section 5: Get the \
Message Across.\
\>", "Text",
 CellChangeTimes->{{3.7661461844073677`*^9, 3.766146195653063*^9}, {
  3.7662242168456087`*^9, 
  3.7662242220371275`*^9}},ExpressionUUID->"1360ac7f-830c-4927-97ae-\
2dd752ae5720"],

Cell["\<\
Once we have cool visualizations that can tell the story of our analysis, we \
need to put together a report or a computational essay that weaves the story \
together to communicate our message to the audience.\
\>", "Text",
 CellChangeTimes->{3.766146200358921*^9, 
  3.7662242505544586`*^9},ExpressionUUID->"aa54b300-97bc-4c27-8585-\
8cccfc516407"],

Cell["[00:24]", "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.7],
 CellChangeTimes->{{3.7665075681432133`*^9, 3.766507568862628*^9}, {
   3.7665077580949802`*^9, 3.7665077607112217`*^9}, 3.766508272253685*^9, {
   3.766921536627124*^9, 3.7669215403148813`*^9}, {3.766965402237241*^9, 
   3.766965402557143*^9}},
 CellTags->"Timecode",ExpressionUUID->"0735f7f6-c87a-4fc1-8a0c-777508d6cefd"],

Cell["\<\
While we can create, edit and work with Wolfram Notebooks manually pretty \
comfortably, sometimes we need to automate the process of creating notebooks \
in form of reports. A report can be created with the CreateDocument function \
in the Wolfram Language.\
\>", "Text",
 CellChangeTimes->{{3.766146220468051*^9, 3.766146224762699*^9}, {
  3.766224255908064*^9, 3.7662242593010817`*^9}, {3.766224300566184*^9, 
  3.7662243060798373`*^9}, {3.767114198644416*^9, 
  3.7671142068511143`*^9}},ExpressionUUID->"aecb23b5-a0b7-4fd3-876d-\
a154aeb043b9"],

Cell["\<\
Style elements can be added to the content of the reports by specifying the \
type of cell we want to include in the document. The layout and display of \
the contents in the report can be customized using Grid, Row, Column, \
GraphicsRow, GraphicsColumn or many other such functions available in the \
Wolfram Language.\
\>", "Text",
 CellChangeTimes->{{3.7661462320111237`*^9, 3.766146237401534*^9}, {
  3.7662243212113757`*^9, 
  3.766224361716523*^9}},ExpressionUUID->"991354c2-fd57-496a-ba09-\
eff66c2e013a"],

Cell["[01:04]", "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.7],
 CellChangeTimes->{{3.7665075681432133`*^9, 3.766507568862628*^9}, {
   3.7665077580949802`*^9, 3.7665077607112217`*^9}, 3.766508272253685*^9, {
   3.766921536627124*^9, 3.7669215403148813`*^9}, {3.766965402237241*^9, 
   3.766965402557143*^9}, {3.766965451635491*^9, 3.766965454928931*^9}},
 CellTags->"Timecode",ExpressionUUID->"56f3d378-972f-42bd-8c31-acb02c782550"],

Cell["\<\
Here is an example of a report on the population of the countries in the \
South Asian Association for Regional Cooperation. It shows the 10 most \
populous cities and the increase in population of the country since 1900. The \
script helps repetitively generate the same report for each country in the \
group.\
\>", "Text",
 CellChangeTimes->{{3.7661463312728853`*^9, 3.766146339894629*^9}, {
  3.766224390203067*^9, 
  3.7662244001490498`*^9}},ExpressionUUID->"a587f6ab-e70d-4b26-8824-\
b1e212a1144f"],

Cell["\<\
To automate the process of report generation, the Wolfram Language provides \
the use of report templates. Let\[CloseCurlyQuote]s create one from scratch. \
We can add a slot that will accept the value for the country variable and an \
expression that will get evaluated when the report is generated. Here\
\[CloseCurlyQuote]s more code to compute things that will show up in the \
report. The cell behavior can be changed to control the appearance of the \
final notebook. \
\>", "Text",
 CellChangeTimes->{{3.766146346830965*^9, 3.7661463824371347`*^9}, {
  3.7662244115114574`*^9, 3.7662244861538434`*^9}, {3.767114336726605*^9, 
  3.767114344256256*^9}},ExpressionUUID->"8b840c67-a26b-44b5-b5ba-\
1ad4fe7f6010"],

Cell["\<\
We  can preview a copy of the report, which is generated using the default \
values in the slots.\
\>", "Text",
 CellChangeTimes->{{3.766146346830965*^9, 3.7661463824371347`*^9}, {
  3.7662244115114574`*^9, 3.7662244861538434`*^9}, {3.767114336726605*^9, 
  3.7671143461661577`*^9}},ExpressionUUID->"227f97d5-b760-4d09-ab60-\
a5da2aa9d73e"],

Cell["\<\
Here\[CloseCurlyQuote]s a template similar to the one we created. We can \
generate a document from the template by supplying new values for the slots.\
\>", "Text",
 CellChangeTimes->{{3.766146388817978*^9, 3.766146394077731*^9}, {
   3.766224517311636*^9, 3.7662245251229787`*^9}, 
   3.7662253509537673`*^9},ExpressionUUID->"eb50d304-99fa-40b8-9134-\
bb8fc51ca80f"],

Cell["[02:29]", "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.7],
 CellChangeTimes->{{3.7665075681432133`*^9, 3.766507568862628*^9}, {
   3.7665077580949802`*^9, 3.7665077607112217`*^9}, 3.766508272253685*^9, {
   3.766921536627124*^9, 3.7669215403148813`*^9}, {3.766965402237241*^9, 
   3.766965402557143*^9}, {3.76696553300387*^9, 3.766965536171273*^9}},
 CellTags->"Timecode",ExpressionUUID->"b208ce09-cdf1-4bbb-8043-5ed5169e9f8e"],

Cell["\<\
For repetitive analysis for a list of inputs, we can use repeating blocks \
that allow a template to loop over a list of supplied slot values.\
\>", "Text",
 CellChangeTimes->{
  3.766146400989191*^9, {3.7662245392210083`*^9, 
   3.766224569733059*^9}},ExpressionUUID->"3893cbb7-599c-43da-87d0-\
9b8bab527c79"],

Cell["\<\
This template with the repeating blocks will accept a continent and then loop \
over the countries in the continent, creating a block per section in the \
report for each country in the final report.\
\>", "Text",
 CellChangeTimes->{
  3.766146405964913*^9, {3.7662245838054667`*^9, 
   3.766224609038989*^9}},ExpressionUUID->"bbaa01ed-726d-462a-bdb1-\
a74fa0670bf5"],

Cell["[02:55]", "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.7],
 CellChangeTimes->{{3.7665075681432133`*^9, 3.766507568862628*^9}, {
   3.7665077580949802`*^9, 3.7665077607112217`*^9}, 3.766508272253685*^9, {
   3.766921536627124*^9, 3.7669215403148813`*^9}, {3.766965402237241*^9, 
   3.766965402557143*^9}, {3.76696553300387*^9, 3.766965536171273*^9}, {
   3.7669655687738647`*^9, 3.766965568950137*^9}},
 CellTags->"Timecode",ExpressionUUID->"d757765c-a480-467f-b3ce-66a5063cb3f6"],

Cell["\<\
Document generators can be deployed with driver code that computes the values \
needed to fill in the templates.\
\>", "Text",
 CellChangeTimes->{
  3.766146411238164*^9, {3.766224626735759*^9, 3.766224834091474*^9}, {
   3.767114250868294*^9, 
   3.767114252305935*^9}},ExpressionUUID->"29964005-8754-43a9-aaa4-\
e50a86f42ef3"],

Cell["\<\
We can deploy and run a generator that produces a daily report on the \
performance over the past seven days of the three stocks with the highest \
trading volumes on the previous day for a specific industry sector. We create \
the driver here, and then we can deploy it to the cloud. \
\>", "Text",
 CellChangeTimes->{
  3.766146411238164*^9, {3.766224626735759*^9, 
   3.766224834091474*^9}},ExpressionUUID->"99f6f194-13a0-445d-856a-\
6833e4610581"],

Cell["[03:30]", "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.7],
 CellChangeTimes->{{3.7665075681432133`*^9, 3.766507568862628*^9}, {
   3.7665077580949802`*^9, 3.7665077607112217`*^9}, 3.766508272253685*^9, {
   3.766921536627124*^9, 3.7669215403148813`*^9}, {3.766965402237241*^9, 
   3.766965402557143*^9}, {3.76696553300387*^9, 3.766965536171273*^9}, {
   3.7669656108391457`*^9, 3.766965613316642*^9}},
 CellTags->"Timecode",ExpressionUUID->"fdbe2739-9427-4e72-8f5d-f4618c4fc882"],

Cell["\<\
The generation of the report is done by the driver, and it is triggered every \
weekday\[LongDash]actually, from Tuesday to Saturday\[LongDash]for the \
previous business day at a certain time. The generation of the report takes a \
long time, so this is an example of a case where asynchronous evaluation is \
preferable.  A notification email will arrive at the Wolfram ID of the user \
once the report has been generated.\
\>", "Text",
 CellChangeTimes->{
  3.766146446805311*^9, {3.766224813806446*^9, 
   3.7662248361216774`*^9}},ExpressionUUID->"06621cd2-1717-43ce-b613-\
0f109387a1ef"],

Cell["[04:01]", "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.7],
 CellChangeTimes->{{3.7665075681432133`*^9, 3.766507568862628*^9}, {
   3.7665077580949802`*^9, 3.7665077607112217`*^9}, 3.766508272253685*^9, {
   3.766921536627124*^9, 3.7669215403148813`*^9}, {3.766965402237241*^9, 
   3.766965402557143*^9}, {3.76696553300387*^9, 3.766965536171273*^9}, {
   3.766965650946851*^9, 3.766965655761394*^9}},
 CellTags->"Timecode",ExpressionUUID->"dc531f3a-83a8-4f9e-a169-f7b7c8ce498c"],

Cell["\<\
In summary, we looked at various options for creating reports. We looked at \
basic commands to script a report and generate it repeatedly for different \
data. We also looked at creating report template notebooks\[LongDash]simple \
ones and ones with repeating blocks\[LongDash]and using them automatically to \
generate reports. Finally we looked at deploying drivers to the cloud that \
would trigger automatic report generation and delivery.\
\>", "Text",
 CellChangeTimes->{
  3.766146457005273*^9, {3.766224846839749*^9, 3.766224891169181*^9}, 
   3.7662254733327265`*^9, {3.7671143555792522`*^9, 
   3.7671143604132547`*^9}},ExpressionUUID->"4329deab-d767-4585-832f-\
ef545e4855b9"]
}, Open  ]]
},
WindowSize->{790, 1032},
WindowMargins->{{Automatic, 179}, {903, Automatic}},
ShowCellTags->True,
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
      "Custom Styles", "Section", 
       CellChangeTimes -> {{3.646611660445352*^9, 3.646611669493331*^9}}], 
      Cell[
       StyleData["Title"], CellMargins -> {{27, Inherited}, {10, 30}}, 
       StyleKeyMapping -> {"Tab" -> "Subtitle"}, 
       CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> False, 
       LineSpacing -> {1, 4}, LanguageCategory -> "NaturalLanguage", 
       CounterIncrements -> "Title", 
       CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
         "Figure", 0}, {"Subtitle", 0}, {"Subsubtitle", 0}, {"Item", 0}, {
         "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
         "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, MenuSortingValue -> 
       1100, MenuCommandKey -> "1", FontFamily -> "Source Sans Pro", FontSize -> 
       45, FontTracking -> -0.5, FontColor -> RGBColor[0.8, 0.043, 0.008]], 
      Cell[
       StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> 
       Cell[
         TextData[
          CounterBox["Section"], 
          StyleBox[
          " |\[ThinSpace]", FontColor -> 
           RGBColor[
            0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
           FontFamily -> "Source Sans Pro", FontSize -> 38, FontWeight -> 
           Light]], "SectionNumber"], 
       CellMargins -> {{67, Inherited}, {34, 54}}, Evaluatable -> True, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> True, 
       ShowCellLabel -> False, 
       CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "Exercise", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 36, 
       FontSlant -> "Plain", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
       InterpretationBoxOptions -> {Editable -> True}], 
      Cell[
       StyleData["SectionDoubleDigit"], CellFrame -> {{0, 0}, {0, 0}}, 
       CellDingbat -> Cell[
         TextData[
          CounterBox["Section"], 
          StyleBox[
          " |\[ThinSpace]", FontColor -> 
           RGBColor[
            0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
           FontFamily -> "Source Sans Pro", FontSize -> 38, FontWeight -> 
           Light]], "SectionNumber"], 
       CellMargins -> {{112, Inherited}, {12, 64}}, Evaluatable -> True, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> True, 
       ShowCellLabel -> False, 
       CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "Exercise", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 36, 
       FontSlant -> "Plain", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
       InterpretationBoxOptions -> {Editable -> True}], 
      Cell[
       StyleData["SectionNumber"], CellBaseline -> Baseline, FontFamily -> 
       "Source Sans Pro", FontSize -> 36, FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
      Cell[
       StyleData["SectionInline"], FontFamily -> "Source Sans Pro", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
      Cell[
       StyleData["SectionNoDingbat"], 
       CellMargins -> {{64, Inherited}, {12, 64}}, Evaluatable -> True, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> True, 
       ShowCellLabel -> False, 
       CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "Exercise", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 36, 
       FontSlant -> "Plain", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
       InterpretationBoxOptions -> {Editable -> True}], 
      Cell[
       StyleData["Subsection"], CellMargins -> {{27, Inherited}, {12, 32}}, 
       FontFamily -> "Source Sans Pro", FontSize -> 25, FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
      Cell[
       StyleData["Subsubsection"], CellMargins -> {{27, Inherited}, {6, 16}}, 
       FontFamily -> "Source Sans Pro", FontSize -> 20, FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
      Cell[
       StyleData["Text"], CellMargins -> {{27, 10}, {7, 8}}, 
       LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> 
       "Text", MenuSortingValue -> 1400, MenuCommandKey -> "7", FontFamily -> 
       "Source Sans Pro", FontSize -> 15], 
      Cell[
       StyleData["Link"], 
       CellChangeTimes -> {{3.747057645225031*^9, 3.747057645432509*^9}, {
        3.747057679800942*^9, 3.747057679968298*^9}}, FontFamily -> 
       "WolframCodeSans", FontSize :> If[CurrentValue[
           EvaluationCell[], "FontFamily"] === "Source Sans Pro", Inherited, 
         If[CurrentValue[
            EvaluationCell[], "FontFamily"] === "WolframCodeSans", Inherited, 
          Inherited 0.9]], FontColor -> 
       RGBColor[
        0.4285191119249256, 0.45610742351415273`, 0.560845349813077]]}, 
     Closed]]}, Visible -> False, FrontEndVersion -> 
  "12.0 for Mac OS X x86 (64-bit) (April 8, 2019)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Timecode"->{
  Cell[1955, 47, 360, 6, 56, "Text",ExpressionUUID->"a6d4b324-6e8e-4ff5-831c-3b381b156d97",
   CellTags->"Timecode"],
  Cell[2979, 73, 410, 7, 56, "Text",ExpressionUUID->"0735f7f6-c87a-4fc1-8a0c-777508d6cefd",
   CellTags->"Timecode"],
  Cell[4479, 106, 456, 7, 56, "Text",ExpressionUUID->"56f3d378-972f-42bd-8c31-acb02c782550",
   CellTags->"Timecode"],
  Cell[6917, 159, 455, 7, 56, "Text",ExpressionUUID->"b208ce09-cdf1-4bbb-8043-5ed5169e9f8e",
   CellTags->"Timecode"],
  Cell[8078, 187, 507, 8, 56, "Text",ExpressionUUID->"d757765c-a480-467f-b3ce-66a5063cb3f6",
   CellTags->"Timecode"],
  Cell[9393, 218, 507, 8, 56, "Text",ExpressionUUID->"fdbe2739-9427-4e72-8f5d-f4618c4fc882",
   CellTags->"Timecode"],
  Cell[10508, 241, 505, 8, 56, "Text",ExpressionUUID->"dc531f3a-83a8-4f9e-a169-f7b7c8ce498c",
   CellTags->"Timecode"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Timecode", 17753, 391}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 781, 12, 135, "Section",ExpressionUUID->"452656e9-c10f-4a30-b8e5-62b3374d1e27",
 Evaluatable->False,
 CounterAssignments->{{"Section", 4}, {"Subsection", 0}, {"Subsubsection", 0}, {"Exercise", 0}}],
Cell[CellGroupData[{
Cell[1364, 36, 588, 9, 48, "Subsection",ExpressionUUID->"a9dbdc2d-8f35-4b83-86be-fc574685c07f"],
Cell[1955, 47, 360, 6, 56, "Text",ExpressionUUID->"a6d4b324-6e8e-4ff5-831c-3b381b156d97",
 CellTags->"Timecode"],
Cell[2318, 55, 295, 7, 35, "Text",ExpressionUUID->"1360ac7f-830c-4927-97ae-2dd752ae5720"],
Cell[2616, 64, 360, 7, 58, "Text",ExpressionUUID->"aa54b300-97bc-4c27-8585-8cccfc516407"],
Cell[2979, 73, 410, 7, 56, "Text",ExpressionUUID->"0735f7f6-c87a-4fc1-8a0c-777508d6cefd",
 CellTags->"Timecode"],
Cell[3392, 82, 558, 10, 81, "Text",ExpressionUUID->"aecb23b5-a0b7-4fd3-876d-a154aeb043b9"],
Cell[3953, 94, 523, 10, 81, "Text",ExpressionUUID->"991354c2-fd57-496a-ba09-eff66c2e013a"],
Cell[4479, 106, 456, 7, 56, "Text",ExpressionUUID->"56f3d378-972f-42bd-8c31-acb02c782550",
 CellTags->"Timecode"],
Cell[4938, 115, 514, 10, 81, "Text",ExpressionUUID->"a587f6ab-e70d-4b26-8824-b1e212a1144f"],
Cell[5455, 127, 725, 12, 104, "Text",ExpressionUUID->"8b840c67-a26b-44b5-b5ba-1ad4fe7f6010"],
Cell[6183, 141, 350, 7, 35, "Text",ExpressionUUID->"227f97d5-b760-4d09-ab60-a5da2aa9d73e"],
Cell[6536, 150, 378, 7, 58, "Text",ExpressionUUID->"eb50d304-99fa-40b8-9134-bb8fc51ca80f"],
Cell[6917, 159, 455, 7, 56, "Text",ExpressionUUID->"b208ce09-cdf1-4bbb-8043-5ed5169e9f8e",
 CellTags->"Timecode"],
Cell[7375, 168, 320, 7, 58, "Text",ExpressionUUID->"3893cbb7-599c-43da-87d0-9b8bab527c79"],
Cell[7698, 177, 377, 8, 58, "Text",ExpressionUUID->"bbaa01ed-726d-462a-bdb1-a74fa0670bf5"],
Cell[8078, 187, 507, 8, 56, "Text",ExpressionUUID->"d757765c-a480-467f-b3ce-66a5063cb3f6",
 CellTags->"Timecode"],
Cell[8588, 197, 338, 8, 35, "Text",ExpressionUUID->"29964005-8754-43a9-aaa4-e50a86f42ef3"],
Cell[8929, 207, 461, 9, 81, "Text",ExpressionUUID->"99f6f194-13a0-445d-856a-6833e4610581"],
Cell[9393, 218, 507, 8, 56, "Text",ExpressionUUID->"fdbe2739-9427-4e72-8f5d-f4618c4fc882",
 CellTags->"Timecode"],
Cell[9903, 228, 602, 11, 104, "Text",ExpressionUUID->"06621cd2-1717-43ce-b613-0f109387a1ef"],
Cell[10508, 241, 505, 8, 56, "Text",ExpressionUUID->"dc531f3a-83a8-4f9e-a169-f7b7c8ce498c",
 CellTags->"Timecode"],
Cell[11016, 251, 699, 12, 104, "Text",ExpressionUUID->"4329deab-d767-4585-832f-ef545e4855b9"]
}, Open  ]]
}
]
*)

