(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     20822,        432]
NotebookOptionsPosition[     11989,        260]
NotebookOutlinePosition[     18816,        405]
CellTagsIndexPosition[     18745,        400]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Get your Data into Shape", "Section",
 Evaluatable->False,
 CellChangeTimes->{{3.7550187405549192`*^9, 3.755018745149918*^9}, {
   3.7591638606642447`*^9, 3.759163886002613*^9}, 3.759164210011063*^9, {
   3.759164301100876*^9, 3.7591643044495583`*^9}, {3.759164377421114*^9, 
   3.759164377845544*^9}, {3.759167251656486*^9, 3.759167252750435*^9}, 
   3.7594988327022038`*^9, {3.7600982572670107`*^9, 3.760098267473927*^9}},
 CounterAssignments->{{"Section", 1}, {"Subsection", 0}, {
   "Subsubsection", 0}, {
   "Exercise", 0}},ExpressionUUID->"452656e9-c10f-4a30-b8e5-62b3374d1e27"],

Cell[CellGroupData[{

Cell["Feature Extraction and Dimensionality Reduction", "Subsection",
 CellChangeTimes->{{3.76107050681248*^9, 3.761070522683797*^9}, {
   3.76107058461234*^9, 3.7610705946430264`*^9}, {3.7628835574485292`*^9, 
   3.7628835673684397`*^9}, {3.762883693478266*^9, 3.76288369844493*^9}, {
   3.764006753900371*^9, 3.764006757316087*^9}, {3.766148341983994*^9, 
   3.766148381653051*^9}, {3.766516930027422*^9, 3.7665169538264923`*^9}, {
   3.7669220030863867`*^9, 3.766922005094008*^9}, {3.76692250042992*^9, 
   3.766922506205824*^9}, 
   3.766924173183235*^9},ExpressionUUID->"afc7b843-2ec8-4f16-a944-\
16980d1203e4"],

Cell["[00:00]", "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.7],
 CellChangeTimes->{{3.7665075681432133`*^9, 3.766507568862628*^9}, {
   3.7665077580949802`*^9, 3.7665077607112217`*^9}, 3.766508272253685*^9, {
   3.766921536627124*^9, 3.7669215403148813`*^9}},
 CellTags->"Timecode",ExpressionUUID->"3efcfc1c-6a5a-493a-a5a3-558bba6aeb71"],

Cell["\<\
Multiparadigm Data Science with the Wolfram Language, Section 2: Getting Your \
Data into Shape \
\>", "Text",
 CellChangeTimes->{
  3.766923007887261*^9, 3.766934716540247*^9, {3.7670170856237087`*^9, 
   3.7670171019142456`*^9}, 
   3.767029641047537*^9},ExpressionUUID->"526bd8d9-2a75-4b45-9b2a-\
dd011076721a"],

Cell["\<\
Data preprocessing involves deriving features from the raw data that are \
informative and non-redundant, and are also suitable as input to machine \
learning algorithms and statistical models often used in the later stages of \
the workflow.\
\>", "Text",
 CellChangeTimes->{
  3.7669230078941936`*^9, {3.7670171302868557`*^9, 
   3.767017152481744*^9}},ExpressionUUID->"ef73589c-c79e-45b5-b32b-\
fa50b66d87d6"],

Cell["\<\
Feature extraction therefore becomes a very useful step in the multiparadigm \
data science workflow as it transforms raw data in a variety of formats into \
numeric vectors, which make it easier to do things like applying \
transformations like standardization, rescaling, filtering, etc.; performing \
operations like Principal Component Analysis and others; or simply find \
distances between samples or even triggering activations in neural networks.\
\>", "Text",
 CellChangeTimes->{
  3.766923007930972*^9, {3.766933382572031*^9, 3.766933403203699*^9}, {
   3.7669334969954853`*^9, 3.7669335057004337`*^9}, {3.7670171446938553`*^9, 
   3.7670172059941072`*^9}, 
   3.7670296677042017`*^9},ExpressionUUID->"08b6ff56-580e-4ef4-b923-\
9e5ff86bb60c"],

Cell["[00:55]", "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.7],
 CellChangeTimes->{{3.7665075681432133`*^9, 3.766507568862628*^9}, {
   3.7665077580949802`*^9, 3.7665077607112217`*^9}, 3.766508272253685*^9, {
   3.766921536627124*^9, 3.7669215403148813`*^9}, {3.766934785969784*^9, 
   3.7669347941129*^9}},
 CellTags->"Timecode",ExpressionUUID->"3d505bc4-0a99-4114-a680-36c9dd1429db"],

Cell["\<\
During feature extraction, we can convert nominal features that describe some \
qualitative aspects of an object, usually represented as text or string, to \
numbers. We can convert Boolean features\[LongDash]true/false, yes/no and so \
on\[LongDash]to numbers. And we can also convert images and text to numbers.\
\>", "Text",
 CellChangeTimes->{
  3.766923007937766*^9, {3.76693372908959*^9, 3.766933736168146*^9}, {
   3.766934771562409*^9, 3.766934832480666*^9}, {3.7670172097689953`*^9, 
   3.767017294374013*^9}, {3.767029703530655*^9, 
   3.7670297097707634`*^9}},ExpressionUUID->"a06e3524-ec4b-4e17-9ee8-\
b49aa7bd29ff"],

Cell["\<\
It\[CloseCurlyQuote]s not sufficient to just have these numbers. If the \
numeric features have different ranges of values, then we need to have \
feature scaling. Standardization\[LongDash]that is, shifting and rescaling \
elements of a list to have zero mean and unit sample variance\[LongDash]is \
one way to scale features.\
\>", "Text",
 CellChangeTimes->{
  3.766923008032669*^9, {3.7669337402881393`*^9, 3.766933743287817*^9}, {
   3.7670173113477964`*^9, 
   3.7670173793236055`*^9}},ExpressionUUID->"d296fc6e-9782-4ff3-9aaf-\
c7ae299899d4"],

Cell["[01:40]", "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.7],
 CellChangeTimes->{{3.7665075681432133`*^9, 3.766507568862628*^9}, {
   3.7665077580949802`*^9, 3.7665077607112217`*^9}, 3.766508272253685*^9, {
   3.766921536627124*^9, 3.7669215403148813`*^9}, {3.766934785969784*^9, 
   3.7669347941129*^9}, {3.766934860391499*^9, 3.766934862814767*^9}},
 CellTags->"Timecode",ExpressionUUID->"439cd0a7-a952-49af-a4d6-af4b76c085a6"],

Cell["\<\
In addition to feature extraction, we can also use feature selection to \
obtain a reduced set of features. Sometimes the original input may contain \
redundant and irrelevant features that affect the performance of a machine \
learning algorithm negatively. Feature selection can help with this problem. \
It can improve generalization of the model by reducing overfitting, it can \
reduce training times and it can even simplify models to make them more \
easily interpretable by humans.\
\>", "Text",
 CellChangeTimes->{
  3.7669230080393953`*^9, {3.766933747910816*^9, 3.766933770070909*^9}, {
   3.767017382675606*^9, 3.7670174370861053`*^9}, 
   3.76702977002757*^9},ExpressionUUID->"6264e520-3aea-45a4-9eda-\
76baede97feb"],

Cell["\<\
Feature selection is also sometimes referred to as variable selection, \
attribute selection or variable subset selection\[LongDash]the process of \
selecting a subset of relevant features for use in model construction. Filter \
methods work by selecting features based on some score calculated by applying \
a statistical test to determine which feature has the most predictive power. \
Wrapper methods select a subset of features and train a model, change the \
subset and see if the model performance improves or degrades. In forward \
selection, features are added one at a time. In backward elimination, \
starting with all features, they are removed one at a time. Embedded methods \
have feature selection built in as part of the model training process itself.\
\
\>", "Text",
 CellChangeTimes->{
  3.766923008089473*^9, {3.7669337738425617`*^9, 3.7669337887263412`*^9}, {
   3.766934938747645*^9, 3.766934952063446*^9}, 3.767017115133956*^9, {
   3.7670174493761053`*^9, 3.7670174757681055`*^9}, 
   3.767029779004467*^9},ExpressionUUID->"03d28ae1-619c-480f-ba74-\
c7be3178eee8"],

Cell["[03:02]", "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.7],
 CellChangeTimes->{{3.7665075681432133`*^9, 3.766507568862628*^9}, {
   3.7665077580949802`*^9, 3.7665077607112217`*^9}, 3.766508272253685*^9, {
   3.766921536627124*^9, 3.7669215403148813`*^9}, {3.766934785969784*^9, 
   3.7669347941129*^9}, {3.766934860391499*^9, 3.766934862814767*^9}, {
   3.7669349964774303`*^9, 3.766934999828349*^9}},
 CellTags->"Timecode",ExpressionUUID->"d07a500c-e2a5-4883-8688-0a3b79fef173"],

Cell["\<\
Dimensionality reduction can be treated as a special case of feature \
extraction and selection, where data is projected to a different dimension \
than original feature space. When faced with too many features, projecting \
data to lower dimensions helps to avoid the curse of \
dimensionality\[LongDash]poor general performance of models overfitted on \
training data. Dimensionality reduction also allows intuitive visualization \
of data points in two or three dimensions for exploratory analysis. \
\>", "Text",
 CellChangeTimes->{
  3.7669230080967417`*^9, {3.766933792318214*^9, 3.7669338008963337`*^9}, {
   3.7669350140140743`*^9, 3.766935048623062*^9}, {3.7670175139401054`*^9, 
   3.7670175660041056`*^9}},ExpressionUUID->"b9640ab1-d591-408e-ac33-\
327ae5afa953"],

Cell["\<\
The DimensionReduce function automatically selects the best dimensionality \
reduction algorithm based on the data, but we can also specify the method we \
want to use. For example, in this case we are using TSNE or PCA. The \
FeatureSpacePlot function automatically extracts features from the given data \
and reduces to two dimensions and creates a scatter plot.\
\>", "Text",
 CellChangeTimes->{
  3.766923008132749*^9, {3.766933820449424*^9, 3.766933835126061*^9}, 
   3.76693505939284*^9, {3.7670175953291054`*^9, 3.767017634783106*^9}, {
   3.7670176825101056`*^9, 
   3.7670177107021055`*^9}},ExpressionUUID->"9f797713-de50-409b-b4c7-\
7f45f6a6a87e"],

Cell["[03:59]", "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.7],
 CellChangeTimes->{{3.7665075681432133`*^9, 3.766507568862628*^9}, {
   3.7665077580949802`*^9, 3.7665077607112217`*^9}, 3.766508272253685*^9, {
   3.766921536627124*^9, 3.7669215403148813`*^9}, {3.766934785969784*^9, 
   3.7669347941129*^9}, {3.766934860391499*^9, 3.766934862814767*^9}, {
   3.7669349964774303`*^9, 3.766934999828349*^9}, {3.766935079874627*^9, 
   3.7669350803951283`*^9}},
 CellTags->"Timecode",ExpressionUUID->"e639b0a9-459d-4ac0-94ce-151a3269bff5"],

Cell["\<\
When faced with a large collection of data samples, instance selection can \
help with quickly creating a model for proof of concept. This involves \
selecting a subset of the training data to actually build the classifier. \
Instances can be sampled from a large dataset either by random sampling or \
stratified sampling.\
\>", "Text",
 CellChangeTimes->{
  3.7669230081985483`*^9, {3.7669338428283377`*^9, 3.766933850133511*^9}, {
   3.7670178274331055`*^9, 
   3.7670178322561054`*^9}},ExpressionUUID->"d3be33ea-2716-4878-9895-\
38ce51e462c8"],

Cell["[04:21]", "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.7],
 CellChangeTimes->{{3.7665075681432133`*^9, 3.766507568862628*^9}, {
   3.7665077580949802`*^9, 3.7665077607112217`*^9}, 3.766508272253685*^9, {
   3.766921536627124*^9, 3.7669215403148813`*^9}, {3.766934785969784*^9, 
   3.7669347941129*^9}, {3.766934860391499*^9, 3.766934862814767*^9}, {
   3.7669349964774303`*^9, 3.766934999828349*^9}, {3.766935079874627*^9, 
   3.7669350803951283`*^9}, {3.766935110707851*^9, 3.766935112827784*^9}},
 CellTags->"Timecode",ExpressionUUID->"c1b7298b-e62b-46be-8264-8e2279dd5000"],

Cell["\<\
In summary, we looked at functionality useful for extracting features from \
raw data and for reducing dimensionality of high-dimensional data. We also \
talked briefly about feature selection and instance selection. \
\>", "Text",
 CellChangeTimes->{
  3.766923008293374*^9, {3.76693385298104*^9, 3.766933857036677*^9}, 
   3.7669339881030397`*^9, {3.7670178407591057`*^9, 
   3.7670178415431056`*^9}},ExpressionUUID->"ac828252-6da8-4699-b9cc-\
5f9067b132c4"],

Cell["\<\
This brings us to the end of the section Get Your Data into Shape.\
\>", "Text",
 CellChangeTimes->{{3.7670178536311054`*^9, 
  3.7670178689121056`*^9}},ExpressionUUID->"5037f745-0fe5-4a16-b5c0-\
a2f9c62f138f"]
}, Open  ]]
},
WindowSize->{837, 1035},
WindowMargins->{{Automatic, 90}, {900, Automatic}},
ShowCellTags->True,
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (October 15, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
      "Custom Styles", "Section", 
       CellChangeTimes -> {{3.646611660445352*^9, 3.646611669493331*^9}}], 
      Cell[
       StyleData["Title"], CellMargins -> {{27, Inherited}, {10, 30}}, 
       StyleKeyMapping -> {"Tab" -> "Subtitle"}, 
       CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> False, 
       LineSpacing -> {1, 4}, LanguageCategory -> "NaturalLanguage", 
       CounterIncrements -> "Title", 
       CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
         "Figure", 0}, {"Subtitle", 0}, {"Subsubtitle", 0}, {"Item", 0}, {
         "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
         "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, MenuSortingValue -> 
       1100, MenuCommandKey -> "1", FontFamily -> "Source Sans Pro", FontSize -> 
       45, FontTracking -> -0.5, FontColor -> RGBColor[0.8, 0.043, 0.008]], 
      Cell[
       StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> 
       Cell[
         TextData[
          CounterBox["Section"], 
          StyleBox[
          " |\[ThinSpace]", FontColor -> 
           RGBColor[
            0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
           FontFamily -> "Source Sans Pro", FontSize -> 38, FontWeight -> 
           Light]], "SectionNumber"], 
       CellMargins -> {{67, Inherited}, {34, 54}}, Evaluatable -> True, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> True, 
       ShowCellLabel -> False, 
       CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "Exercise", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 36, 
       FontSlant -> "Plain", FontColor -> 
       RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]
        , InterpretationBoxOptions -> {Editable -> True}], 
      Cell[
       StyleData["SectionDoubleDigit"], CellFrame -> {{0, 0}, {0, 0}}, 
       CellDingbat -> Cell[
         TextData[
          CounterBox["Section"], 
          StyleBox[
          " |\[ThinSpace]", FontColor -> 
           RGBColor[
            0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
           FontFamily -> "Source Sans Pro", FontSize -> 38, FontWeight -> 
           Light]], "SectionNumber"], 
       CellMargins -> {{112, Inherited}, {12, 64}}, Evaluatable -> True, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> True, 
       ShowCellLabel -> False, 
       CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "Exercise", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 36, 
       FontSlant -> "Plain", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
       InterpretationBoxOptions -> {Editable -> True}], 
      Cell[
       StyleData["SectionNumber"], CellBaseline -> Baseline, FontFamily -> 
       "Source Sans Pro", FontSize -> 36, FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
      Cell[
       StyleData["SectionInline"], FontFamily -> "Source Sans Pro", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
      Cell[
       StyleData["SectionNoDingbat"], 
       CellMargins -> {{64, Inherited}, {12, 64}}, Evaluatable -> True, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> True, 
       ShowCellLabel -> False, 
       CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "Exercise", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 36, 
       FontSlant -> "Plain", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
       InterpretationBoxOptions -> {Editable -> True}], 
      Cell[
       StyleData["Subsection"], CellMargins -> {{27, Inherited}, {12, 32}}, 
       FontFamily -> "Source Sans Pro", FontSize -> 25, FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
      Cell[
       StyleData["Subsubsection"], CellMargins -> {{27, Inherited}, {6, 16}}, 
       FontFamily -> "Source Sans Pro", FontSize -> 20, FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
      Cell[
       StyleData["Text"], CellMargins -> {{27, 10}, {7, 8}}, 
       LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> 
       "Text", MenuSortingValue -> 1400, MenuCommandKey -> "7", FontFamily -> 
       "Source Sans Pro", FontSize -> 15], 
      Cell[
       StyleData["Link"], 
       CellChangeTimes -> {{3.747057645225031*^9, 3.747057645432509*^9}, {
        3.747057679800942*^9, 3.747057679968298*^9}}, FontFamily -> 
       "WolframCodeSans", FontSize :> If[CurrentValue[
           EvaluationCell[], "FontFamily"] === "Source Sans Pro", Inherited, 
         If[CurrentValue[
            EvaluationCell[], "FontFamily"] === "WolframCodeSans", Inherited, 
          Inherited 0.9]], FontColor -> 
       RGBColor[
        0.4285191119249256, 0.45610742351415273`, 0.560845349813077]]}, 
     Closed]]}, Visible -> False, FrontEndVersion -> 
  "12.0 for Mac OS X x86 (64-bit) (October 15, 2018)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Timecode"->{
  Cell[1792, 44, 360, 6, 45, "Text",ExpressionUUID->"3efcfc1c-6a5a-493a-a5a3-558bba6aeb71",
   CellTags->"Timecode"],
  Cell[3672, 88, 408, 7, 45, "Text",ExpressionUUID->"3d505bc4-0a99-4114-a680-36c9dd1429db",
   CellTags->"Timecode"],
  Cell[5286, 123, 454, 7, 56, "Text",ExpressionUUID->"439cd0a7-a952-49af-a4d6-af4b76c085a6",
   CellTags->"Timecode"],
  Cell[7586, 167, 506, 8, 56, "Text",ExpressionUUID->"d07a500c-e2a5-4883-8688-0a3b79fef173",
   CellTags->"Timecode"],
  Cell[9552, 206, 558, 9, 56, "Text",ExpressionUUID->"e639b0a9-459d-4ac0-94ce-151a3269bff5",
   CellTags->"Timecode"],
  Cell[10673, 230, 604, 9, 56, "Text",ExpressionUUID->"c1b7298b-e62b-46be-8264-8e2279dd5000",
   CellTags->"Timecode"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Timecode", 18008, 384}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 590, 9, 135, "Section",ExpressionUUID->"452656e9-c10f-4a30-b8e5-62b3374d1e27",
 Evaluatable->False,
 CounterAssignments->{{"Section", 1}, {"Subsection", 0}, {"Subsubsection", 0}, {"Exercise", 0}}],
Cell[CellGroupData[{
Cell[1173, 33, 616, 9, 48, "Subsection",ExpressionUUID->"afc7b843-2ec8-4f16-a944-16980d1203e4"],
Cell[1792, 44, 360, 6, 45, "Text",ExpressionUUID->"3efcfc1c-6a5a-493a-a5a3-558bba6aeb71",
 CellTags->"Timecode"],
Cell[2155, 52, 324, 8, 35, "Text",ExpressionUUID->"526bd8d9-2a75-4b45-9b2a-dd011076721a"],
Cell[2482, 62, 422, 9, 58, "Text",ExpressionUUID->"ef73589c-c79e-45b5-b32b-fa50b66d87d6"],
Cell[2907, 73, 762, 13, 104, "Text",ExpressionUUID->"08b6ff56-580e-4ef4-b923-9e5ff86bb60c"],
Cell[3672, 88, 408, 7, 45, "Text",ExpressionUUID->"3d505bc4-0a99-4114-a680-36c9dd1429db",
 CellTags->"Timecode"],
Cell[4083, 97, 638, 11, 81, "Text",ExpressionUUID->"a06e3524-ec4b-4e17-9ee8-b49aa7bd29ff"],
Cell[4724, 110, 559, 11, 81, "Text",ExpressionUUID->"d296fc6e-9782-4ff3-9aaf-c7ae299899d4"],
Cell[5286, 123, 454, 7, 56, "Text",ExpressionUUID->"439cd0a7-a952-49af-a4d6-af4b76c085a6",
 CellTags->"Timecode"],
Cell[5743, 132, 740, 13, 127, "Text",ExpressionUUID->"6264e520-3aea-45a4-9eda-76baede97feb"],
Cell[6486, 147, 1097, 18, 173, "Text",ExpressionUUID->"03d28ae1-619c-480f-ba74-c7be3178eee8"],
Cell[7586, 167, 506, 8, 56, "Text",ExpressionUUID->"d07a500c-e2a5-4883-8688-0a3b79fef173",
 CellTags->"Timecode"],
Cell[8095, 177, 784, 13, 127, "Text",ExpressionUUID->"b9640ab1-d591-408e-ac33-327ae5afa953"],
Cell[8882, 192, 667, 12, 81, "Text",ExpressionUUID->"9f797713-de50-409b-b4c7-7f45f6a6a87e"],
Cell[9552, 206, 558, 9, 56, "Text",ExpressionUUID->"e639b0a9-459d-4ac0-94ce-151a3269bff5",
 CellTags->"Timecode"],
Cell[10113, 217, 557, 11, 81, "Text",ExpressionUUID->"d3be33ea-2716-4878-9895-38ce51e462c8"],
Cell[10673, 230, 604, 9, 56, "Text",ExpressionUUID->"c1b7298b-e62b-46be-8264-8e2279dd5000",
 CellTags->"Timecode"],
Cell[11280, 241, 470, 9, 58, "Text",ExpressionUUID->"ac828252-6da8-4699-b9cc-5f9067b132c4"],
Cell[11753, 252, 220, 5, 35, "Text",ExpressionUUID->"5037f745-0fe5-4a16-b5c0-a2f9c62f138f"]
}, Open  ]]
}
]
*)

